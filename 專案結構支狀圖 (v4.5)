.
├── 📁 api/ (後端)
│   ├── 📁 admin/ (後端)
│   │   ├── adminAuth.js (後台管理員身份驗證)
│   │   ├── adminRoutes.js (後台管理功能總路由)
│   │   ├── balanceService.js (查詢AI服務餘額)
│   │   └── logService.js (讀取系統日誌)
│   ├── 📁 gameplay/ (後端)
│   │   ├── actionHandler.js (核心：處理玩家的主要動作指令)
│   │   ├── preActionChecks.js (執行動作前的狀態檢查，如精力)
│   │   ├── staminaManager.js (管理玩家的精力消耗與恢復)
│   │   └── stateUpdaters.js (核心：更新遊戲世界與玩家狀態)
│   ├── 📁 models/ (後端/資料庫)
│   │   ├── inventoryModel.js (定義物品與裝備的數據模型與操作)
│   │   └── userModel.js (定義新玩家的預設數據結構)
│   ├── 📁 routes/ (後端)
│   │   ├── npcChatRoutes.js (處理與NPC的聊天及贈禮)
│   │   ├── npcProfileRoutes.js (處理獲取NPC詳細資料的請求)
│   │   └── npcTradeRoutes.js (處理與NPC的交易流程)
│   ├── 📁 services/ (後端)
│   │   ├── aiService.js (核心：所有對外部AI模型(GPT/Gemini等)的請求都經由此處)
│   │   ├── backgroundTaskProcessor.js (處理耗時長的背景任務，避免前端等待)
│   │   ├── beggarService.js (「丐幫情報網」功能的專屬邏輯)
│   │   └── npcCreationService.js (生成新NPC的背景故事與人物設定)
│   ├── aiConfig.js (後端 - AI模型設定檔，用於切換不同任務使用的AI)
│   ├── authRoutes.js (後端 - 處理玩家註冊與登入)
│   ├── beggarRoutes.js (後端 - 「丐幫情報網」功能的API路由)
│   ├── bountyRoutes.js (後端 - 處理懸賞任務的發布與領取)
│   ├── cacheManager.js (後端 - 管理伺服器內存快取，如NPC姓名列表)
│   ├── combatRoutes.js (後端 - 處理所有戰鬥相關的API)
│   ├── contextBuilder.js (後端 - 組合遊戲所有相關資訊，建構給AI的上下文)
│   ├── dataIntegrityService.js (後端 - 數據健康檢查與修復服務)
│   ├── economyManager.js (後端 - 管理玩家的貨幣（銀兩）)
│   ├── epilogue.js (後端 - 生成玩家角色死亡後的結局故事)
│   ├── gameRoutes.js (後端 - 遊戲核心功能的總路由)
│   ├── gameplayRoutes.js (後端 - 處理玩家核心互動的路由)
│   ├── gcpRoutes.js (後端 - 串接Google Cloud Platform服務的路由)
│   ├── gmRoutes.js (後端 - GM(遊戲管理員)工具的API路由)
│   ├── identityManager.js (後端 - 根據世界狀態決定NPC身份)
│   ├── interactionRoutes.js (後端 - 舊版的互動路由，已被重構)
│   ├── itemManager.js (後端 - 管理玩家與NPC的物品增減)
│   ├── libraryRoutes.js (後端 - 「江湖圖書館」功能的API路由)
│   ├── locationManager.js (後端 - 管理遊戲世界中地點狀態的變化)
│   ├── mapRoutes.js (後端 - 生成世界地圖數據)
│   ├── npcHelpers.js (後端 - NPC相關的輔助函式)
│   ├── npcRoutes.js (後端 - NPC互動功能的總路由)
│   ├── playerStateHelpers.js (後端 - 玩家狀態相關的輔助函式)
│   ├── relationshipManager.js (後端 - 管理NPC之間的複雜人際關係)
│   ├── reputationManager.js (後端 - 管理玩家在江湖中的聲望變化)
│   ├── stateRoutes.js (後端 - 提供遊戲各種狀態查詢的API)
│   └── worldEngine.js (後端 - 負責生成新地點等世界級的內容)
├── 📁 prompts/ (後端)
│   ├── 📁 story_components/ (後端)
│   │   ├── interactionRule.js (AI規則：NPC互動與戰鬥)
│   │   ├── itemLedgerRule.js (AI規則：物品系統)
│   │   ├── martialArtsRule.js (AI規則：武學系統)
│   │   ├── npcRule.js (AI規則：NPC數據結構)
│   │   ├── outputStructureRule.js (AI規則：JSON輸出格式)
│   │   ├── playerAttributeRule.js (AI規則：玩家屬性)
│   │   ├── romanceRule.js (AI規則：戀愛系統)
│   │   ├── systemInteractionRule.js (AI規則：系統互動)
│   │   └── worldviewAndProgressionRule.js (AI規則：世界觀與遊戲進程)
│   ├── actionClassifierPrompt.js (AI指令：分析玩家意圖)
│   ├── anachronismPrompt.js (AI指令：處理時代錯置的物品)
│   ├── beggarInquiryPrompt.js (AI指令：丐幫情報問答)
│   ├── bountyGeneratorPrompt.js (AI指令：生成懸賞任務)
│   ├── chatMasterPrompt.js (AI指令：NPC聊天互動)
│   ├── chatSummaryPrompt.js (AI指令：總結聊天內容)
│   ├── combatPrompt.js (AI指令：裁決戰鬥回合)
│   ├── combatSetupPrompt.js (AI指令：設定戰鬥開場)
│   ├── deathCausePrompt.js (AI指令：生成角色死因)
│   ├── encyclopediaPrompt.js (AI指令：生成江湖百科)
│   ├── epiloguePrompt.js (AI指令：生成結局故事)
│   ├── giveItemPrompt.js (AI指令：處理贈禮反應)
│   ├── itemGeneratorPrompt.js (AI指令：生成新物品)
│   ├── locationGeneratorPrompt.js (AI指令：生成新地點)
│   ├── mapGeneratorPrompt.js (AI指令：生成地圖Mermaid語法)
│   ├── narrativeForGivePrompt.js (AI指令：生成贈禮事件的旁白)
│   ├── narrativePrompt.js (AI指令：將數據轉化為小說旁白)
│   ├── npcCreatorPrompt.js (AI指令：生成新NPC)
│   ├── npcMemoryPrompt.js (AI指令：更新NPC對玩家的記憶)
│   ├── postCombatPrompt.js (AI指令：生成戰後結果)
│   ├── prequelPrompt.js (AI指令：生成前情提要)
│   ├── randomEventPrompt.js (AI指令：生成隨機事件)
│   ├── relationGraphPrompt.js (AI指令：生成關係圖Mermaid語法)
│   ├── relationshipFixPrompt.js (AI指令：修復NPC關係鏈)
│   ├── rewardGeneratorPrompt.js (AI指令：生成懸賞獎勵)
│   ├── romanceEventPrompt.js (AI指令：生成戀愛事件)
│   ├── skillGeneratorPrompt.js (AI指令：生成新武學)
│   ├── storyPrompt.js (AI指令：核心故事生成)
│   ├── suggestionPrompt.js (AI指令：生成行動建議)
│   └── tradeSummaryPrompt.js (AI指令：總結交易事件)
├── 📁 scripts/ (前端)
│   ├── api.js (前端 - 統一的API請求管理)
│   ├── bounties.js (前端 - 「懸賞告示板」頁面邏輯)
│   ├── config.js (前端 - 配置文件，如後端URL)
│   ├── dom.js (前端 - 統一管理DOM元素選擇)
│   ├── encyclopedia.js (前端 - 「江湖百科」頁面邏輯)
│   ├── gameLoop.js (前端 - 遊戲主循環與核心邏輯)
│   ├── gameState.js (前端 - 全局狀態管理)
│   ├── gmManager.js (前端 - GM管理面板的界面邏輯)
│   ├── interactionHandlers.js (前端 - 處理玩家點擊等互動)
│   ├── library.js (前端 - 「江湖圖書館」頁面邏輯)
│   ├── login.js (前端 - 登入頁面邏輯)
│   ├── main.js (前端 - 遊戲主頁面的入口腳本)
│   ├── map.js (前端 - 「世界地圖」頁面邏輯)
│   ├── modalManager.js (前端 - 管理所有彈出式視窗)
│   ├── novel.js (前端 - 「我的江湖路」頁面邏輯)
│   ├── populateRulers.js (後端 - 一次性腳本，填充地點統治者)
│   ├── register.js (前端 - 註冊頁面邏輯)
│   ├── relations.js (前端 - 「人物關係圖」頁面邏輯)
│   ├── tips.js (前端 - 儲存遊戲提示文字)
│   ├── tradeManager.js (前端 - 交易界面的邏輯)
│   └── uiUpdater.js (前端 - 負責更新所有遊戲界面元素)
├── 📁 styles/ (前端)
│   ├── admin.css (前端 - 後台管理頁面樣式)
│   ├── auth.css (前端 - 登入/註冊頁面樣式)
│   ├── base.css (前端 - 基礎樣式與變數)
│   ├── bounties.css (前端 - 懸賞告示板頁面樣式)
│   ├── components.css (前端 - 可重用的UI組件樣式)
│   ├── game.css (前端 - 遊戲主界面樣式)
│   ├── gmPanel.css (前端 - GM控制台樣式)
│   ├── library.css (前端 - 江湖圖書館頁面樣式)
│   ├── modals_feedback.css (前端 - 反饋類彈窗(如死亡、結局)樣式)
│   ├── modals_info.css (前端 - 資訊類彈窗(如武學)樣式)
│   ├── modals_interaction.css (前端 - 互動類彈窗(如戰鬥、聊天)樣式)
│   ├── modals_item.css (前端 - 物品詳情彈窗樣式)
│   ├── modals_location.css (前端 - 地點詳情彈窗樣式)
│   ├── novel.css (前端 - 小說/百科閱讀頁面樣式)
│   ├── skills.css (前端 - 武學總覽彈窗樣式)
│   └── trade.css (前端 - 交易界面樣式)
├── admin.html (前端 - 後台管理頁面)
├── bounties.html (前端 - 懸賞告示板頁面)
├── encyclopedia.html (前端 - 江湖百科頁面)
├── index.html (前端 - 遊戲主頁面)
├── library.html (前端 - 江湖圖書館頁面)
├── login.html (前端 - 登入頁面)
├── map.html (前端 - 世界地圖頁面)
├── novel.html (前端 - 個人小說頁面)
├── package-lock.json (後端 - 鎖定專案依賴版本)
├── package.json (後端 - 定義專案及依賴)
├── register.html (前端 - 註冊頁面)
├── relations.html (前端 - 人物關係圖頁面)
└── server.js (後端 - 伺服器主入口文件)
