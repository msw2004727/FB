.
├── 🔮 api/ (後端核心商業邏輯)
│   ├──  middleware/ (後端中介軟體)
│   │   └── 🔑 auth.js (JWT身份驗證，保護需要登入的API)
│   ├── models/ (後端資料模型)
│   │   ├── 🛡️ inventoryModel.js (處理裝備/卸下等背包核心邏輯)
│   │   └── 👤 userModel.js (定義新玩家的預設屬性結構)
│   ├── routes/ (後端API的具體路由)
│   │   ├── 💬 npcChatRoutes.js (處理與NPC的對話、贈禮、結束對話)
│   │   ├── 👤 npcProfileRoutes.js (提供NPC的公開基本資料)
│   │   └── 💰 npcTradeRoutes.js (處理與NPC的交易發起與確認)
│   ├── gameplay/ (後端遊戲核心玩法邏輯)
│   │   ├── 🏃 actionHandler.js (核心互動處理器，解析玩家行動)
│   │   ├── 🧘 cultivationManager.js (處理閉關修練的請求)
│   │   ├── ✅ preActionChecks.js (執行玩家行動前的預先檢查)
│   │   └── ⚡ staminaManager.js (管理與計算玩家的精力值)
│   ├── admin/ (後台管理系統API)
│   │   ├── 🔑 adminAuth.js (後台系統的密碼驗證)
│   │   ├── 💰 balanceService.js (模擬獲取各AI服務的餘額)
│   │   └── 📜 logService.js (提供後台讀取系統日誌的功能)
│   ├── config/ (後端設定檔)
│   │   └── 🧘 cultivationFormulas.js (定義閉關修練的成功率、收益與風險)
│   ├── ⚙️ adminRoutes.js (後台管理系統的API路由)
│   ├── ⚙️ aiConfig.js (AI模型中控設定檔，為不同任務指派AI)
│   ├── 🤝 bountyRoutes.js (懸賞任務的獲取與領取獎勵)
│   ├── 🧠 cacheManager.js (NPC名稱等數據的伺服器快取)
│   ├── ⚔️ combatRoutes.js (處理戰鬥的發起、行動與結束)
│   ├── 🧠 contextBuilder.js (建構AI生成故事所需的所有上下文)
│   ├── 🔍 dataIntegrityService.js (資料健康度檢查與修復)
│   ├── 💰 economyManager.js (統一管理玩家的貨幣(銀兩)增減)
│   ├── 📜 epilogue.js (為死亡玩家生成結局故事)
│   ├── ⚙️ gameRoutes.js (遊戲核心功能的總路由)
│   ├── ⚙️ gameplayRoutes.js (遊戲玩法相關路由的整合)
│   ├── ⚙️ gcpRoutes.js (GCP帳單資訊相關API)
│   ├── ⚙️ gmRoutes.js (遊戲管理員(GM)工具的API路由)
│   ├── 👤 identityManager.js (為新NPC決定其社會身份)
│   ├── ⚙️ interactionRoutes.js (處理所有非戰鬥的核心互動)
│   ├── 📦 inventoryRoutes.js (處理物品裝備/卸下的API路由)
│   ├── 📦 itemManager.js (處理物品的新增/移除等後端邏輯)
│   ├── 📚 libraryRoutes.js (江湖圖書館，提供所有玩家小說列表與內容)
│   ├── 🗺️ locationManager.js (處理地點狀態的更新)
│   ├── 🗺️ mapRoutes.js (提供玩家個人的世界地圖資料)
|   ├── 👤 npcHelpers.js (NPC相關的輔助函式)
│   ├── ⚙️ npcRoutes.js (NPC相關功能的總路由)
│   ├── 🤝 relationshipManager.js (處理NPC之間的雙向關係)
│   ├── 📢 reputationManager.js (處理NPC死亡後的連鎖聲譽反應)
│   ├── 💾 stateRoutes.js (讀取/重置遊戲狀態、背包、技能等)
│   ├── 📦 templateManager.js (從模板庫中尋找可復用的NPC)
│   └── 🌍 worldEngine.js (動態生成新地點與懸賞任務)
│
├── 📜 prompts/ (後端AI提示工程)
│   ├── story_components/ (故事提示的模組化元件)
│   │   ├── 🤝 interactionRule.js (定義NPC互動與戰鬥觸發規則)
│   │   ├── 📦 itemLedgerRule.js (定義物品變化的回傳規則)
│   │   ├── ⚔️ martialArtsRule.js (定義武學系統的規則)
│   │   ├── 👤 npcRule.js (定義NPC的資料結構與互動規則)
│   │   ├── 📝 outputStructureRule.js (定義AI回傳的JSON結構)
│   │   ├── 👤 playerAttributeRule.js (定義玩家核心屬性(時間/正邪/武功))
│   │   ├── ❤️ romanceRule.js (定義戀愛與心動值系統規則)
│   │   ├── ⚙️ systemInteractionRule.js (定義系統級互動(地點/建築/懸賞))
│   │   └── 🌍 worldviewAndProgressionRule.js (定義世界觀與新手保護)
│   ├── ❓ actionClassifierPrompt.js (分類玩家意圖的提示)
│   ├── 🕰️ anachronismPrompt.js (處理時代錯置指令的提示)
│   ├── 💰 beggarInquiryPrompt.js (丐幫情報網的問答提示)
│   ├── 🤝 bountyGeneratorPrompt.js (生成懸賞任務的提示)
│   ├── 💬 chatMasterPrompt.js (NPC一對一聊天AI的提示)
│   ├── 📜 chatSummaryPrompt.js (總結聊天紀錄的提示)
│   ├── ⚔️ combatPrompt.js (戰鬥中AI裁判的提示)
│   ├── 🎬 combatSetupPrompt.js (戰鬥開始前場景佈置的提示)
│   ├── 🧘 cultivationPrompt.js (生成閉關修練故事的提示)
│   ├── 💀 deathCausePrompt.js (為玩家生成合理死因的提示)
│   ├── 📚 encyclopediaPrompt.js (生成江湖百科的提示)
│   ├── 📜 epiloguePrompt.js (生成結局故事的提示)
│   ├── 🎁 giveItemPrompt.js (處理贈送NPC物品反應的提示)
│   ├── 📦 itemGeneratorPrompt.js (生成新物品模板的提示)
│   ├── 🗺️ locationGeneratorPrompt.js (生成新地點模板的提示)
│   ├── 🎁 narrativeForGivePrompt.js (贈予事件小說化的提示)
│   ├── 📜 narrativePrompt.js (將遊戲數據轉為小說旁白的提示)
│   ├── 👤 npcCreatorPrompt.js (生成新NPC檔案的提示)
│   ├── 🧠 npcMemoryPrompt.js (更新NPC對玩家記憶的提示)
│   ├── 💥 postCombatPrompt.js (戰鬥結束後結算獎懲的提示)
│   ├── 📖 prequelPrompt.js (生成前情提要的提示)
│   ├── ❤️ proactiveChatPrompt.js (NPC主動對話的提示)
│   ├── 🗺️ relationGraphPrompt.js (生成人物關係圖(Mermaid)的提示)
│   ├── ❤️ relationshipFixPrompt.js (修復孤立NPC關係的提示)
│   ├── 💰 rewardGeneratorPrompt.js (領取懸賞獎勵的提示)
│   ├── ⚔️ skillGeneratorPrompt.js (生成新武學模板的提示)
│   ├── 📖 storyPrompt.js (主線故事生成AI的總提示)
│   ├── 💡 suggestionPrompt.js (生成書僮建議的提示)
│   └── 💰 tradeSummaryPrompt.js (總結交易紀錄的提示)
│
├── 💻 public/ (前端資源)
│   └── js/
│       └── 📦 inventoryManager.js (前端管理背包和裝備的類)
│
├── 🚀 services/ (後端服務層)
│   ├── 🤖 aiService.js (統一的AI模型調度中心)
│   ├── 💰 beggarService.js (丐幫情報網系統的後端服務)
│   └── 👤 npcCreationService.js (處理新NPC創建的後端服務)
│
├── 🎨 styles/ (前端CSS樣式)
│   ├── 🔑 auth.css (登入/註冊頁面樣式)
│   ├── 🎨 base.css (基礎全域樣式)
│   ├── 🤝 bounties.css (懸賞告示板頁面樣式)
│   ├── 🧩 components.css (儀表板等UI元件樣式)
│   ├── 🎨 game.css (遊戲主介面樣式)
│   ├── 🎨 gmPanel.css (GM後台控制面板樣式)
│   ├── 📚 library.css (江湖圖書館頁面樣式)
│   ├── 🎨 modals_feedback.css (死亡/結局等回饋彈窗樣式)
│   ├── 🎨 modals_info.css (武學總覽等資訊彈窗樣式)
│   ├── 🎨 modals_interaction.css (戰鬥/聊天等互動彈窗樣式)
│   ├── 🎨 modals_item.css (物品詳情彈窗樣式)
│   ├── 🎨 modals_location.css (地點詳情彈窗樣式)
│   └── 📖 novel.css (小說/百科閱讀頁面樣式)
│
├── 💻 scripts/ (前端JavaScript腳本)
│   ├── ⚙️ admin.js (後台管理頁面的前端邏輯)
│   ├── ⚙️ api.js (前端統一的API請求模組)
│   ├── 🤝 bounties.js (懸賞告示板頁面的前端邏輯)
│   ├── ⚙️ config.js (前端的設定檔)
│   ├── ⚙️ dom.js (集中管理所有DOM元素)
│   ├── 📚 encyclopedia.js (江湖百科頁面的前端邏輯)
│   ├── ⚙️ gameLoop.js (遊戲主循環與核心邏輯)
│   ├── 👤 gameState.js (前端的全局遊戲狀態管理)
│   ├── ⚙️ gmManager.js (GM工具的前端邏輯)
│   ├── 🤝 interactionHandlers.js (處理前端的所有玩家互動)
│   ├── 📚 library.js (江湖圖書館頁面的前端邏輯)
│   ├── ⚙️ main.js (遊戲主頁面的入口腳本)
│   ├── 🗺️ map.js (世界地圖頁面的前端邏輯)
│   ├── ⚙️ modalManager.js (管理所有彈出視窗的顯示與邏輯)
│   ├── 📖 novel.js (個人小說頁面的前端邏輯)
│   ├── 🗺️ relations.js (人物關係圖頁面的前端邏輯)
│   ├── 💡 tips.js (載入畫面中的提示文字庫)
│   └── 💰 tradeManager.js (前端處理交易介面的邏輯)
│
├── 🌐 admin.html (前端 - 後台管理頁面)
├── 🌐 bounties.html (前端 - 懸賞告示板頁面)
├── ⚙️ dataPurification.js (後端 - 一次性數據淨化腳本)
├── 🌐 encyclopedia.html (前端 - 江湖百科頁面)
├── 🌐 index.html (前端 - 遊戲主頁面)
├── 🌐 library.html (前端 - 江湖圖書館頁面)
├── 🌐 login.html (前端 - 登入頁面)
├── 🌐 map.html (前端 - 世界地圖頁面)
├── 🌐 novel.html (前端 - 個人小說頁面)
├── 📦 package-lock.json (後端 - 專案依賴鎖定檔)
├── 📦 package.json (後端 - 專案依賴與設定檔)
├── 🌐 relations.html (前端 - 人物關係圖頁面)
├── 🌐 register.html (前端 - 註冊頁面)
├── 🚀 server.js (後端 - Express伺服器入口)
└── 🌐 viewport.html (前端 - 玩家操作手冊)
