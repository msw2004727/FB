.
├── 📂 api/
│   ├── 📂 admin/
│   │   ├── 📄 adminAuth.js          -> [後端] 後台管理員身份驗證中間件
│   │   ├── 📄 adminRoutes.js        -> [後端] 後台管理功能的主路由
│   │   ├── 📄 balanceService.js      -> [後端] (模擬)各家AI服務的餘額查詢
│   │   └── 📄 logService.js          -> [後端] 系統日誌的讀取服務
│   ├── 📂 gameplay/
│   │   ├── 📄 actionHandler.js       -> [後端] 處理玩家核心互動（如移動、探索）的邏輯
│   │   ├── 📄 preActionChecks.js     -> [後端] 在執行玩家動作前的預先檢查（如精力、特殊指令）
│   │   ├── 📄 stateUpdaters.js       -> [後端] 更新遊戲核心狀態並寫入資料庫
│   │   └── 📄 staminaManager.js      -> [後端] 管理玩家精力值的計算與事件
│   ├── 📂 models/
│   │   ├── 📄 inventoryModel.js      -> [後端/資料庫] 處理玩家物品裝備、卸下的複雜邏輯
│   │   └── 📄 userModel.js           -> [後端/資料庫] 定義新玩家帳號的預設欄位資料結構
│   ├── 📂 routes/
│   │   ├── 📄 npcChatRoutes.js       -> [後端] 處理與NPC聊天、贈禮、結束對話的路由
│   │   ├── 📄 npcProfileRoutes.js    -> [後端] 提供NPC公開資訊的路由
│   │   └── 📄 npcTradeRoutes.js      -> [後端] 處理與NPC交易的路由
│   ├── 📄 aiConfig.js              -> [後端] AI模型中控設定檔，為不同任務指派特定AI
│   ├── 📄 authRoutes.js            -> [後端/資料庫] 處理玩家註冊與登入的路由
│   ├── 📄 beggarRoutes.js          -> [後端] 處理丐幫情報系統的專用路由
│   ├── 📄 bountyRoutes.js          -> [後端] 處理懸賞任務的讀取與領取的路由
│   ├── 📄 cacheManager.js          -> [後端] 伺服器啟動時快取數據（如NPC姓名）的管理
│   ├── 📄 combatRoutes.js          -> [後端] 處理戰鬥發起、行動、認輸、結算的路由
│   ├── 📄 contextBuilder.js        -> [後端/資料庫] 建立遊戲當前回合完整上下文的核心服務
│   ├── 📄 dataIntegrityService.js  -> [後端/資料庫] 數據健康度檢查與自動修復服務
│   ├── 📄 economyManager.js        -> [後端/資料庫] 處理遊戲中的貨幣（銀兩）增減
│   ├── 📄 epilogue.js              -> [後端] 為死亡玩家生成結局故事的路由
│   ├── 📄 gameRoutes.js            -> [後端] 遊戲核心功能的主路由分發器
│   ├── 📄 gameplayRoutes.js        -> [後端] 遊戲互動與戰鬥的路由分發器
│   ├── 📄 gmRoutes.js              -> [後端] GM（遊戲管理員）工具的API路由
│   ├── 📄 identityManager.js       -> [後端] 為新NPC決定其社會身份（如寨主、掌門）
│   ├── 📄 interactionRoutes.js     -> [後端] 玩家互動指令的統一入口路由
│   ├── 📄 itemManager.js           -> [後端/資料庫] 管理玩家與NPC物品交換的核心邏輯
│   ├── 📄 libraryRoutes.js         -> [後端] 提供「江湖圖書館」小說列表與內容的路由
│   ├── 📄 locationManager.js       -> [後端/資料庫] 處理地點狀態的更新
│   ├── 📄 mapRoutes.js             -> [後端] 提供玩家個人化世界地圖的路由
│   ├── 📄 npcHelpers.js            -> [後端/資料庫] NPC相關的輔助函式（如合併檔案、更新好感度）
│   ├── 📄 npcRoutes.js             -> [後端] NPC相關路由的總分發器
│   ├── 📄 playerStateHelpers.js    -> [後端/資料庫] 玩家狀態相關的輔助函式（如獲取背包、技能）
│   ├── 📄 relationshipManager.js   -> [後端/資料庫] 處理NPC之間關係（如夫妻、父子）的同步
│   ├── 📄 reputationManager.js     -> [後端/資料庫] NPC死亡後，處理相關人連鎖聲譽變化的引擎
│   ├── 📄 stateRoutes.js           -> [後端] 遊戲狀態讀取（如最新進度、百科）的路由
│   └── 📄 worldEngine.js           -> [後端] 動態生成新地點與懸賞任務的世界引擎
├── 📂 middleware/
│   └── 📄 auth.js                  -> [後端] JWT身份驗證中間件，保護需要登入的API
├── 📂 prompts/
│   ├── 📂 story_components/
│   │   ├── 📄 interactionRule.js   -> [後端] AI規則：定義NPC互動與戰鬥觸發
│   │   ├── 📄 itemLedgerRule.js      -> [後端] AI規則：定義物品變化的回傳格式
│   │   ├── 📄 martialArtsRule.js   -> [後端] AI規則：定義武學學習與修練
│   │   ├── 📄 npcRule.js           -> [後端] AI規則：定義NPC互動的資料結構
│   │   ├── 📄 outputStructureRule.js -> [後端] AI規則：定義AI最終輸出的完整JSON結構
│   │   ├── 📄 playerAttributeRule.js -> [後端] AI規則：定義時間、正邪、武功等核心屬性
│   │   ├── 📄 romanceRule.js       -> [後端] AI規則：定義戀愛與心動值系統
│   │   └── 📄 systemInteractionRule.js -> [後端] AI規則：定義世界動態演化（如地點更新）
│   ├── 📄 actionClassifierPrompt.js -> [後端] AI腳本：玩家行動意圖分類
│   ├── 📄 anachronismPrompt.js      -> [後端] AI腳本：處理時代錯置指令（如掏出手機）
│   ├── 📄 beggarInquiryPrompt.js   -> [後端] AI腳本：生成丐幫弟子的情報回覆
│   ├── 📄 bountyGeneratorPrompt.js -> [後端] AI腳本：生成新的懸賞任務
│   ├── 📄 chatMasterPrompt.js      -> [後端] AI腳本：驅動NPC進行深度對話
│   ├── 📄 chatSummaryPrompt.js     -> [後端] AI腳本：將長對話總結為故事
│   ├── 📄 combatPrompt.js          -> [後端] AI腳本：裁決一回合的戰鬥過程與結果
│   ├── 📄 combatSetupPrompt.js     -> [後端] AI腳本：佈置戰鬥開場的陣營與反應
│   ├── 📄 deathCausePrompt.js      -> [後端] AI腳本：為玩家自盡生成一個合理的死因
│   ├── 📄 encyclopediaPrompt.js    -> [後端] AI腳本：生成玩家的江湖百科
│   ├── 📄 epiloguePrompt.js        -> [後端] AI腳本：為死亡玩家撰寫結局故事
│   ├── 📄 giveItemPrompt.js        -> [後端] AI腳本：判斷NPC收到禮物後的反應
│   ├── 📄 itemGeneratorPrompt.js   -> [後端] AI腳本：為新物品生成詳細設定
│   ├── 📄 locationGeneratorPrompt.js-> [後端] AI腳本：為新地點生成詳細設定
│   ├── 📄 narrativeForGivePrompt.js -> [後端] AI腳本：將贈予事件小說化
│   ├── 📄 narrativePrompt.js       -> [後端] AI腳本：將結構化數據轉為小說旁白
│   ├── 📄 npcCreatorPrompt.js      -> [後端] AI腳本：為新NPC生成完整人設
│   ├── 📄 npcMemoryPrompt.js       -> [後端] AI腳本：以NPC視角更新其對玩家的記憶
│   ├── 📄 postCombatPrompt.js      -> [後端] AI腳本：生成戰鬥結束後的實質結果與獎勵
│   ├── 📄 prequelPrompt.js         -> [後端] AI腳本：生成「前情提要」
│   ├── 📄 proactiveChatPrompt.js   -> [後端] AI腳本：驅動NPC主動與玩家對話
│   ├── 📄 relationGraphPrompt.js   -> [後端] AI腳本：生成人物關係圖的Mermaid語法
│   ├── 📄 relationshipFixPrompt.js -> [後端] AI腳本：為孤立的NPC創造與玩家的相遇故事
│   ├── 📄 rewardGeneratorPrompt.js -> [後端] AI腳本：生成懸賞任務的獎勵
│   ├── 📄 skillGeneratorPrompt.js  -> [後端] AI腳本：為新武學生成詳細設定
│   ├── 📄 storyPrompt.js           -> [後端] AI腳本：遊戲最核心的主故事生成器
│   ├── 📄 suggestionPrompt.js      -> [後端] AI腳本：生成書僮的行動建議
│   └── 📄 surrenderPrompt.js       -> [後端] AI腳本：裁決戰鬥中認輸的結果
├── 📂 public/
│   └── 📂 js/
│       └── 📄 inventoryManager.js    -> [前端] (未使用) 舊版的物品欄管理邏輯
├── 📂 scripts/
│   ├── 📄 admin.js                 -> [前端] 後台管理頁面的主要邏輯
│   ├── 📄 api.js                   -> [前端] 統一管理所有對後端API請求的模組
│   ├── 📄 bounties.js              -> [前端] 懸賞告示板頁面的邏輯
│   ├── 📄 config.js                -> [前端] 前端設定檔（如後端網址）
│   ├── 📄 dom.js                   -> [前端] 集中管理所有DOM元素的獲取
│   ├── 📄 encyclopedia.js          -> [前端] 江湖百科頁面的邏輯
│   ├── 📄 gameLoop.js              -> [前端] 遊戲主循環與核心邏輯（加載、處理玩家動作）
│   ├── 📄 gameState.js             -> [前端] 定義並導出全域的遊戲狀態物件
│   ├── 📄 gmManager.js             -> [前端] GM面板的功能邏輯
│   ├── 📄 interactionHandlers.js   -> [前端] 處理玩家與介面互動（如點擊NPC、戰鬥操作）
│   ├── 📄 library.js               -> [前端] 江湖圖書館頁面的邏輯
│   ├── 📄 main.js                  -> [前端] 遊戲主頁面的入口，初始化所有事件監聽
│   ├── 📄 map.js                   -> [前端] 世界地圖頁面的邏輯
│   ├── 📄 modalManager.js          -> [前端] 管理遊戲中所有彈出視窗（對話、戰鬥、技能等）
│   ├── 📄 novel.js                 -> [前端] 「我的江湖路」小說頁面的邏輯
│   ├── 📄 populateRulers.js        -> [後端/資料庫] (一次性腳本) 為舊地點數據填充統治者
│   ├── 📄 relations.js             -> [前端] 人物關係圖頁面的邏輯
│   ├── 📄 tips.js                  -> [前端] 遊戲載入時的提示語句庫
│   ├── 📄 tradeManager.js          -> [前端] 處理交易視窗的完整邏輯
│   └── 📄 uiUpdater.js             -> [前端] 負責更新遊戲主介面所有UI元素的模組
├── 📂 services/
│   ├── 📄 aiService.js             -> [後端] AI服務的總調度中心，封裝對各家AI的呼叫
│   ├── 📄 beggarService.js         -> [後端] 丐幫情報系統的後端服務邏輯
│   └── 📄 npcCreationService.js    -> [後端] 負責從無到有創建一個完整NPC的核心服務
├── 📂 styles/
│   ├── 📄 admin.css                -> [前端] 後台管理頁面的樣式
│   ├── 📄 auth.css                 -> [前端] 登入註冊頁面的樣式
│   ├── 📄 base.css                 -> [前端] 基礎樣式與全域變數
│   ├── 📄 bounties.css             -> [前端] 懸賞告示板頁面的樣式
│   ├── 📄 components.css           -> [前端] 遊戲介面中各種小元件的樣式
│   ├── 📄 game.css                 -> [前端] 遊戲主介面的佈局樣式
│   ├── 📄 gmPanel.css              -> [前端] GM面板的樣式
│   ├── 📄 library.css              -> [前端] 江湖圖書館頁面的樣式
│   ├── 📄 modals.css               -> [前端] (已棄用) 舊版彈窗樣式
│   ├── 📄 modals_feedback.css      -> [前端] 回饋型彈窗（如死亡、結局）的樣式
│   ├── 📄 modals_info.css          -> [前端] 資訊展示型彈窗（如技能）的樣式
│   ├── 📄 modals_interaction.css   -> [前端] 互動型彈窗（如戰鬥、對話）的樣式
│   ├── 📄 modals_location.css      -> [前端] 地點詳情彈窗的樣式
│   ├── 📄 novel.css                -> [前端] 小說/百科閱讀頁面的樣式
│   ├── 📄 skills.css               -> [前端] 武學總覽彈窗的樣式
│   └── 📄 trade.css                -> [前端] 交易視窗的樣式
├── 📄 .env                         -> [後端] (未提供) 環境變數設定檔，儲存API金鑰等敏感資訊
├── 📄 admin.html                   -> [前端] 後台管理系統頁面
├── 📄 bounties.html                -> [前端] 懸賞告示板頁面
├── 📄 dataPurification.js          -> [後端/資料庫] (一次性腳本) 用於淨化舊數據的腳本
├── 📄 encyclopedia.html            -> [前端] 江湖百科頁面
├── 📄 index.html                   -> [前端] 遊戲主介面
├── 📄 library.html                 -> [前端] 江湖圖書館頁面
├── 📄 login.html                   -> [前端] 登入頁面
├── 📄 login.js                     -> [前端] 登入頁面的邏輯
├── 📄 map.html                     -> [前端] 世界地圖頁面
├── 📄 novel.html                   -> [前端] 我的江湖路（個人小說）頁面
├── 📄 package-lock.json            -> [後端] 鎖定Node.js專案依賴版本
├── 📄 package.json                 -> [後端] Node.js專案設定與依賴列表
├── 📄 register.html                -> [前端] 註冊頁面
├── 📄 register.js                  -> [前端] 註冊頁面的邏輯
├── 📄 relations.html               -> [前端] 人物關係圖頁面
├── 📄 server.js                    -> [後端] Express伺服器的入口檔案，初始化與啟動伺服器
└── 📄 viewport.html                -> [前端] 玩家操作手冊頁面
